group_by(gsis_id) %>%
arrange(desc(season)) %>%
slice_head(n = 1) %>%
mutate(player_id = as.double(pff_id),
RAS = if_else(is.na(AllTime1) == 1, 8.5, AllTime1)) %>%
select(player_id, full_name, team, position, height, weight, Density, DraftAge, Age, years_exp, RAS) %>%
inner_join(PlayerWAR, by = c("player_id"))
# College Clustering ------------------------------------------------------
PFF_College_conference_addition <- read_excel("C:/Users/sethl/OneDrive/Excel Files/Football/Data Csv/PFF College conference addition.xlsx")
WRCollegeValueCluster <- CollegeWRWARFill %>%
left_join(PFF_College_conference_addition) %>%
group_by(player_id) %>%
arrange(desc(season)) %>%
mutate(CareerGrade = mean(grades_offense, na.rm = T),
yards_after_catch_per_reception = if_else(is.na(yards_after_catch_per_reception) == 1, 0, yards_after_catch_per_reception)) %>%
filter(CareerGrade >= 60, routes >= 20, position == "WR")  %>%
filter(Conference == "ACC" | Conference == "SEC" |
Conference == "Big 12" | Conference == "Big Ten" |
Conference == "Pac-12" | team_name == "NOTRE DAME" |
team_name == "CINCINNATI" | team_name == "N DAK ST" |
team_name == "BUFFALO" | team_name == "BOISE ST" |
team_name == "UCF")%>%
filter((player_id == 146760 & season == 2023) |
(player_id == 99197 & season == 2023) | player_id != 146760) %>%
group_by(player_id) %>%
summarise(RR = mean(routes),
TPRR = mean(targets)/RR,
TDPRR = mean(touchdowns)/RR,
YAC = mean(yards_after_catch_per_reception),
YPRR = mean(yprr),
ADOT = mean(avg_depth_of_target)) %>%
group_by() %>%
mutate(RR = percent_rank(RR),
TPRR = percent_rank(TPRR),
TDPRR = percent_rank(TDPRR),
YAC = percent_rank(YAC),
YPRR = percent_rank(YPRR),
ADOT = percent_rank(ADOT)) %>%
select(player_id, RR, TPRR,  YPRR, TDPRR, ADOT, YAC)
CollegeWAR <- CollegeWARJoin %>%
group_by(player_id) %>%
slice_head(n = 1) %>%
select(player_id, AvgWAR)
SeparatorCollegetable <- CollegeWRWARFill %>%
left_join(PFF_College_conference_addition) %>%
left_join(CollegeWAR, by = c("player_id")) %>%
group_by(season, player_id) %>%
mutate(ContestedRate = contested_targets/targets,
yards_after_catch_per_reception = if_else(is.na(yards_after_catch_per_reception) == 1, 0, yards_after_catch_per_reception),
contested_catch_rate = if_else(is.na(contested_catch_rate) == 1, 0, contested_catch_rate),
CCR = mean(contested_catch_rate),
DRP = mean(drop_rate),
YAC = mean(yards_after_catch_per_reception)
) %>%
filter(targets >= 10, grades_offense >= 60, position == "WR") %>%
filter((player_id == 146760 & season == 2023) |
(player_id == 99197 & season == 2023) |
player_id != 146760) %>%
distinct() %>%
filter(Conference == "ACC" | Conference == "SEC" |
Conference == "Big 12" | Conference == "Big Ten" |
Conference == "Pac-12" | team_name == "NOTRE DAME" |
team_name == "BUFFALO" | team_name == "UCF"|
team_name == "BOISE ST" | team_name == "SMU" |
team_name == "HOUSTON" | player_id == "66272" |
player_id == "128232") %>%
group_by() %>%
mutate(ContestedTile = 1-percent_rank(ContestedRate),
GradeTile = percent_rank(grades_offense),
ADOTTile = percent_rank(avg_depth_of_target),
YPRRTile = percent_rank(yprr),
CCR = percent_rank(CCR),
DRP = 1 - percent_rank(DRP),
YAC = percent_rank(YAC),
CollegeWAR = percent_rank(AvgWAR)+0.01,
Slot = percent_rank(slot_rate),
Value = (YPRRTile^12 +
YAC^3 +
DRP^3 +
exp(CCR) +
log(CollegeWAR)),
Value = percent_rank(Value)
) %>%
arrange(desc(Value)) %>%
mutate(NonSeparator = case_when(ContestedTile <= 0.2 ~ 1,
ADOTTile <= 0.15 ~ 1,
ContestedTile <= 0.3 &
ADOTTile <= 0.3 ~ 1,
ContestedTile <= 0.4 &
ADOTTile >= 0.8 ~ 1,
T ~ 0)) %>%
group_by(player_id) %>%
summarise(player = head(player, 1),
# team_name = head(team_name.x, 1),
# Ht = head(Ht, 1),
# Wt = head(Wt, 1),
# Density = round(head(Density, 1),2),
# RAS = head(RAS, 1),
Seasons = n(),
ContestedTile = round(round(mean(ContestedTile),4)*100, 4),
GradeTile = round(round(mean(GradeTile),4)*100, 4),
ADOTTile = round(round(mean(ADOTTile),4)*100,4),
YPRRTile = round(round(mean(YPRRTile),4)*100,4),
Slot = mean(Slot),
Value = round(round(mean(Value),4)*100, 4),
TotalNonSepSeasons = sum(NonSeparator),
NonSepPercent = round(TotalNonSepSeasons/Seasons,2)) %>%
mutate(Seasons = factor(Seasons, levels = 1:5),
Filter = factor(case_when(
ADOTTile <= 21 ~ "Gadget",
(TotalNonSepSeasons > 1 &                  NonSepPercent > 0.5) ~ "NonSeparator",
T ~ "Solid"
))
)%>%
arrange(desc(Value))
College_WR_Full <- WR_clustering %>%
left_join(WRCollegeValueCluster, by = c("player_id")) %>%
left_join(SeparatorCollegetable, by = c("player_id")) %>%
left_join(combine_data, by = c("AltName2")) %>%
mutate(player = player.x) %>%
group_by() %>%
select(player_id, height, weight, RAS, AvgWAR, RR, TPRR,  YPRR, TDPRR, ADOT, YAC, ContestedTile, GradeTile, ADOTTile, YPRRTile, Value, NonSepPercent) %>%
na.omit()
College_Name_Join <- SeparatorCollegetable %>%
select(player_id, player) %>%
distinct()
NFLValueCluster <- WRWARFill %>%
group_by(player_id) %>%
mutate(CareerGrade = mean(grades_offense, na.rm = T),
yards_after_catch_per_reception = if_else(is.na(yards_after_catch_per_reception) == 1, 0, yards_after_catch_per_reception)) %>%
filter(CareerGrade >= 50, routes >= 20, position == "WR")  %>%
group_by(player_id) %>%
summarise(RR = mean(routes),
TPRR = mean(targets)/RR,
TDPRR = mean(touchdowns)/RR,
YAC = mean(yards_after_catch_per_reception),
YPRR = mean(yprr),
ADOT = mean(avg_depth_of_target)) %>%
group_by() %>%
mutate(RR = percent_rank(RR),
TPRR = percent_rank(TPRR),
TDPRR = percent_rank(TDPRR),
YAC = percent_rank(YAC),
YPRR = percent_rank(YPRR),
ADOT = percent_rank(ADOT)) %>%
select(player_id, RR, TPRR,  YPRR, TDPRR, ADOT, YAC)
NFLWAR <- IdivWARData %>%
group_by(player_id) %>%
summarise(AvgWAR = mean(WAR, na.rm = T))
Separatortable <- WRWARFill %>%
left_join(NFLWAR, by = c("player_id")) %>%
group_by(season, player_id) %>%
mutate(ContestedRate = contested_targets/targets,
yards_after_catch_per_reception = if_else(is.na(yards_after_catch_per_reception) == 1, 0, yards_after_catch_per_reception),
contested_catch_rate = if_else(is.na(contested_catch_rate) == 1, 0, contested_catch_rate),
CCR = mean(contested_catch_rate),
DRP = mean(drop_rate),
YAC = mean(yards_after_catch_per_reception)
) %>%
filter(targets >= 10, grades_offense >= 60, position == "WR") %>%
distinct() %>%
group_by() %>%
mutate(ContestedTile = 1-percent_rank(ContestedRate),
GradeTile = percent_rank(grades_offense),
ADOTTile = percent_rank(avg_depth_of_target),
YPRRTile = percent_rank(yprr),
CCR = percent_rank(CCR),
DRP = 1 - percent_rank(DRP),
YAC = percent_rank(YAC),
CollegeWAR = percent_rank(AvgWAR)+0.01,
Slot = percent_rank(slot_rate),
Value = (YPRRTile^12 +
YAC^3 +
DRP^3 +
exp(CCR) +
log(CollegeWAR)),
Value = percent_rank(Value)
) %>%
arrange(desc(Value)) %>%
mutate(NonSeparator = case_when(ContestedTile <= 0.2 ~ 1,
ADOTTile <= 0.15 ~ 1,
ContestedTile <= 0.3 &
ADOTTile <= 0.3 ~ 1,
ContestedTile <= 0.4 &
ADOTTile >= 0.8 ~ 1,
T ~ 0)) %>%
group_by(player_id) %>%
summarise(player = head(player, 1),
# team_name = head(team_name.x, 1),
# Ht = head(Ht, 1),
# Wt = head(Wt, 1),
# Density = round(head(Density, 1),2),
# RAS = head(RAS, 1),
Seasons = n(),
ContestedTile = round(round(mean(ContestedTile),4)*100, 4),
GradeTile = round(round(mean(GradeTile),4)*100, 4),
ADOTTile = round(round(mean(ADOTTile),4)*100,4),
YPRRTile = round(round(mean(YPRRTile),4)*100,4),
Slot = mean(Slot),
Value = round(round(mean(Value),4)*100, 4),
TotalNonSepSeasons = sum(NonSeparator),
NonSepPercent = round(TotalNonSepSeasons/Seasons,2)) %>%
mutate(Seasons = factor(Seasons, levels = 1:5),
Filter = factor(case_when(
ADOTTile <= 21 ~ "Gadget",
(TotalNonSepSeasons > 1 &                  NonSepPercent > 0.5) ~ "NonSeparator",
T ~ "Solid"
))
)%>%
arrange(desc(Value))
NFL_WR_Full <- NFLWR %>%
left_join(NFLValueCluster, by = c("player_id")) %>%
left_join(Separatortable, by = c("player_id")) %>%
group_by() %>%
filter(ContestedTile != 100) %>%
select(player_id, height, weight, RAS, AvgWAR, RR, TPRR,  YPRR, TDPRR, ADOT, YAC, ContestedTile, GradeTile, ADOTTile, YPRRTile, Value, NonSepPercent) %>%
na.omit()
NFL_Names_Join <- Separatortable %>%
select(player_id, player) %>%
distinct()
# CLUSTERING FINALLY ------------------------------------------------------
weights <- c(2, 2, 3,
1, 0.5, 2,
3, 0.5, 2,
2, 3, 2,
2, 2, 3, 3)
# Function to calculate similarity between rows
calculate_similarity <- function(row1, row2, weights, method = "euclidean") {
if (method == "euclidean") {
# print(row1[-1])
# print(row2[-1])
scaled_differences <- (row1[-1] - row2[-1]) * weights
return(sqrt(sum(scaled_differences^2)))
} else if (method == "cosine") {
scaled_row1 <- row1[-1] * weights
scaled_row2 <- row2[-1] * weights
return(1 - sum(scaled_row1 * scaled_row2) / (sqrt(sum(scaled_row1^2)) * sqrt(sum(scaled_row2^2))))
} else {
stop("Unsupported similarity method")
}
}
# Calculate similarity between each row in dataset1 and each row in dataset2
similarity_matrix <- matrix(NA, nrow = nrow(College_WR_Full), ncol = nrow(NFL_WR_Full))
for (i in 1:nrow(College_WR_Full)) {
for (j in 1:nrow(NFL_WR_Full)) {
similarity_matrix[i, j] <- calculate_similarity(College_WR_Full[i, ], NFL_WR_Full[j, ], weights, method = "euclidean")
}
}
# Find the row in dataset2 most similar to each row in dataset1
# Find the top 5 most similar rows in dataset2 for each row in dataset1
top5_indices <- apply(similarity_matrix, 1, function(x) order(x)[1:5])
top5_values <- apply(similarity_matrix, 1, function(x) sort(x)[1:5])
# Create a dataframe with player IDs from dataset1 and top 5 player IDs and their similarity values from dataset2
result_df <- data.frame(
player_id.x = rep(College_WR_Full$player_id, each = 5),
player_id.y = c(NFL_WR_Full$player_id[top5_indices]),
similarity = c(top5_values)
)
CollegeComps <- result_df %>%
# group_by(player_id.x) %>%
group_by() %>%
mutate(similarity_pr = 1-percent_rank(similarity))  %>%
left_join(College_Name_Join, by = c("player_id.x"= 'player_id')) %>%
left_join(NFL_Names_Join, by = c("player_id.y"= 'player_id')) %>%
select(player.x, player_id.x, player.y, player_id.y, similarity, similarity_pr) %>%
left_join(NFLWAR, by = c("player_id.y" = 'player_id')) %>%
# filter(similarity_pr >= 0.5) %>%
group_by(player_id.x) %>%
mutate(ExpectedWAR = similarity_pr * AvgWAR,
MeanExpectedWAR = mean(ExpectedWAR)) %>%
arrange(desc(similarity_pr)) %>%
arrange(desc(MeanExpectedWAR)) %>%
mutate(Comp = player.y,
ID = paste0(player.x, " - ", player_id.x),
Similarity = similarity_pr) %>%
group_by(ID) %>%
select(ID, player_id.x, Comp, Similarity, ExpectedWAR, MeanExpectedWAR) %>%
left_join(NFLWAR, by = c('player_id.x' = "player_id")) %>%
filter(
# AvgWAR >= 0.05,
# Similarity >= 0.5
) %>%
# slice_head(n = 1) %>%
mutate(MeanSimilarity = mean(Similarity),
AdjustedExpectedWAR = MeanSimilarity * MeanExpectedWAR,
Diff = AvgWAR - AdjustedExpectedWAR,
AvgDiff = mean(Diff, na.rm = T)) %>%
group_by() %>%
mutate(TotalDiff = sum(Diff, na.rm = T),
MeanDiff = mean(Diff, na.rm = T))
View(CollegeComps)
combine_data <- load_combine(seasons = c(2000:2025)) %>%
filter(pos == "WR") %>%
mutate(AltName2 = tolower(gsub("'", "", player_name)),
AltName2 = gsub("[''[:punct:]]", "", AltName2),
AltName2 = gsub(" jr", "", AltName2),
AltName2 = gsub(" sr", "", AltName2),
AltName2 = gsub(" iii", "", AltName2),
AltName2 = gsub(" ii", "", AltName2),
AltName2 = gsub(" iv", "", AltName2),
AltName2 = gsub(" v", "", AltName2)) %>%
separate(AltName2, c("Altfirst_name2", "Altlast_name2"), sep = " ", remove = F) %>%
mutate(height = sapply(ht, convert_height_to_inches),
weight = wt)
View(combine_data)
select(player_name, AltName2, height, weight, forty, vertical, broad_jump, shuttle, cone)
combine_data <- load_combine(seasons = c(2000:2025)) %>%
filter(pos == "WR") %>%
mutate(AltName2 = tolower(gsub("'", "", player_name)),
AltName2 = gsub("[''[:punct:]]", "", AltName2),
AltName2 = gsub(" jr", "", AltName2),
AltName2 = gsub(" sr", "", AltName2),
AltName2 = gsub(" iii", "", AltName2),
AltName2 = gsub(" ii", "", AltName2),
AltName2 = gsub(" iv", "", AltName2),
AltName2 = gsub(" v", "", AltName2)) %>%
separate(AltName2, c("Altfirst_name2", "Altlast_name2"), sep = " ", remove = F) %>%
mutate(height = sapply(ht, convert_height_to_inches),
weight = wt)  %>%
select(player_name, AltName2, height, weight, forty, vertical, broad_jump, shuttle, cone)
College_WR_Full <- WR_clustering %>%
left_join(WRCollegeValueCluster, by = c("player_id")) %>%
left_join(SeparatorCollegetable, by = c("player_id")) %>%
left_join(combine_data, by = c("AltName2")) %>%
mutate(player = player.x) %>%
group_by() %>%
select(player_id, height, weight, RAS, AvgWAR, RR, TPRR,  YPRR, TDPRR, ADOT, YAC, ContestedTile, GradeTile, ADOTTile, YPRRTile, Value, NonSepPercent) %>%
na.omit()
College_WR_Full <- WR_clustering %>%
left_join(WRCollegeValueCluster, by = c("player_id")) %>%
left_join(SeparatorCollegetable, by = c("player_id")) %>%
left_join(combine_data, by = c("AltName2")) %>%
mutate(player = player.x) %>%
group_by() %>%
select(player_id, height, weight, forty, vertical, broad_jump, shuttle, cone, RAS, AvgWAR, RR, TPRR,  YPRR, TDPRR, ADOT, YAC, ContestedTile, GradeTile, ADOTTile, YPRRTile, Value, NonSepPercent) %>%
na.omit()
College_Name_Join <- SeparatorCollegetable %>%
select(player_id, player) %>%
distinct()
NFL_WR_Full <- NFLWR %>%
left_join(NFLValueCluster, by = c("player_id")) %>%
left_join(Separatortable, by = c("player_id")) %>%
group_by() %>%
filter(ContestedTile != 100) %>%
select(player_id, height, weight, forty, vertical, broad_jump, shuttle, cone, RAS, AvgWAR, RR, TPRR,  YPRR, TDPRR, ADOT, YAC, ContestedTile, GradeTile, ADOTTile, YPRRTile, Value, NonSepPercent) %>%
na.omit()
NFL_WR_Full <- NFLWR %>%
left_join(NFLValueCluster, by = c("player_id")) %>%
left_join(Separatortable, by = c("player_id")) %>%
left_join(combine_data, by = c("AltName2")) %>%
group_by() %>%
filter(ContestedTile != 100) %>%
select(player_id, height, weight, forty, vertical, broad_jump, shuttle, cone, RAS, AvgWAR, RR, TPRR,  YPRR, TDPRR, ADOT, YAC, ContestedTile, GradeTile, ADOTTile, YPRRTile, Value, NonSepPercent) %>%
na.omit()
NFL_WR_Full <- NFLWR %>%
left_join(NFLValueCluster, by = c("player_id")) %>%
left_join(Separatortable, by = c("player_id"))
View(NFL_WR_Full)
NFLWR <- Players %>%
filter(position == "WR") %>%
group_by(gsis_id) %>%
arrange(desc(season)) %>%
slice_head(n = 1) %>%
mutate(player_id = as.double(pff_id),
RAS = if_else(is.na(AllTime1) == 1, 8.5, AllTime1)) %>%
left_join(combine_data, by = c("AltName2")) %>%
select(player_id, full_name, team, position, height, weight, forty, vertical, broad_jump, shuttle, cone, Density, DraftAge, Age, years_exp, RAS) %>%
inner_join(PlayerWAR, by = c("player_id"))
NFLWR <- Players %>%
filter(position == "WR") %>%
group_by(gsis_id) %>%
arrange(desc(season)) %>%
slice_head(n = 1) %>%
mutate(player_id = as.double(pff_id),
RAS = if_else(is.na(AllTime1) == 1, 8.5, AllTime1)) %>%
left_join(combine_data, by = c("AltName2")) %>%
mutate(height = height.x,
weight = weight.x) %>%
select(player_id, full_name, team, position, height, weight, forty, vertical, broad_jump, shuttle, cone, Density, DraftAge, Age, years_exp, RAS) %>%
inner_join(PlayerWAR, by = c("player_id"))
View(NFLWR)
NFL_WR_Full <- NFLWR %>%
left_join(NFLValueCluster, by = c("player_id")) %>%
left_join(Separatortable, by = c("player_id")) %>%
group_by() %>%
filter(ContestedTile != 100) %>%
select(player_id, height, weight, forty, vertical, broad_jump, shuttle, cone, RAS, AvgWAR, RR, TPRR,  YPRR, TDPRR, ADOT, YAC, ContestedTile, GradeTile, ADOTTile, YPRRTile, Value, NonSepPercent) %>%
na.omit()
View(NFL_WR_Full)
NFLWR <- Players %>%
filter(position == "WR") %>%
group_by(gsis_id) %>%
arrange(desc(season)) %>%
slice_head(n = 1) %>%
mutate(player_id = as.double(pff_id),
RAS = if_else(is.na(AllTime1) == 1, 8.5, AllTime1)) %>%
left_join(combine_data, by = c("AltName2")) %>%
mutate(height = height.x,
weight = weight.x,
forty = if_else(is.na(forty) == 1, median(forty, na.rm = T), forty),
vertical = if_else(is.na(vertical) == 1, median(vertical, na.rm = T), vertical),
broad_jump = if_else(is.na(broad_jump) == 1, median(broad_jump, na.rm = T), broad_jump),
shuttle = if_else(is.na(shuttle) == 1, median(shuttle, na.rm = T), shuttle),
cone = if_else(is.na(cone) == 1, median(cone, na.rm = T), cone),
) %>%
select(player_id, full_name, team, position, height, weight, forty, vertical, broad_jump, shuttle, cone, Density, DraftAge, Age, years_exp, RAS) %>%
inner_join(PlayerWAR, by = c("player_id"))
View(NFLWR)
NFLWR <- Players %>%
filter(position == "WR") %>%
group_by(gsis_id) %>%
arrange(desc(season)) %>%
slice_head(n = 1) %>%
mutate(player_id = as.double(pff_id),
RAS = if_else(is.na(AllTime1) == 1, 8.5, AllTime1)) %>%
left_join(combine_data, by = c("AltName2")) %>%
mutate(height = height.x,
weight = weight.x,
forty = if_else(is.na(forty) == 1, median(Players$forty, na.rm = T), forty),
vertical = if_else(is.na(vertical) == 1, median(Players$vertical, na.rm = T), vertical),
broad_jump = if_else(is.na(broad_jump) == 1, median(Players$broad_jump, na.rm = T), broad_jump),
shuttle = if_else(is.na(shuttle) == 1, median(Players$shuttle, na.rm = T), shuttle),
cone = if_else(is.na(cone) == 1, median(Players$cone, na.rm = T), cone),
) %>%
select(player_id, full_name, team, position, height, weight, forty, vertical, broad_jump, shuttle, cone, Density, DraftAge, Age, years_exp, RAS) %>%
inner_join(PlayerWAR, by = c("player_id"))
median(Players$forty, na.rm = T)
NFLWR <- Players %>%
filter(position == "WR") %>%
group_by(gsis_id) %>%
arrange(desc(season)) %>%
slice_head(n = 1) %>%
mutate(player_id = as.double(pff_id),
RAS = if_else(is.na(AllTime1) == 1, 8.5, AllTime1)) %>%
left_join(combine_data, by = c("AltName2")) %>%
mutate(height = height.x,
weight = weight.x,
forty = if_else(is.na(forty) == 1, median(combine_data$forty, na.rm = T), forty),
vertical = if_else(is.na(vertical) == 1, median(combine_data$vertical, na.rm = T), vertical),
broad_jump = if_else(is.na(broad_jump) == 1, median(combine_data$broad_jump, na.rm = T), broad_jump),
shuttle = if_else(is.na(shuttle) == 1, median(combine_data$shuttle, na.rm = T), shuttle),
cone = if_else(is.na(cone) == 1, median(combine_data$cone, na.rm = T), cone),
) %>%
select(player_id, full_name, team, position, height, weight, forty, vertical, broad_jump, shuttle, cone, Density, DraftAge, Age, years_exp, RAS) %>%
inner_join(PlayerWAR, by = c("player_id"))
NFL_WR_Full <- NFLWR %>%
left_join(NFLValueCluster, by = c("player_id")) %>%
left_join(Separatortable, by = c("player_id")) %>%
group_by() %>%
filter(ContestedTile != 100) %>%
select(player_id, height, weight, forty, vertical, broad_jump, shuttle, cone, RAS, AvgWAR, RR, TPRR,  YPRR, TDPRR, ADOT, YAC, ContestedTile, GradeTile, ADOTTile, YPRRTile, Value, NonSepPercent) %>%
na.omit()
NFL_Names_Join <- Separatortable %>%
select(player_id, player) %>%
distinct()
# CLUSTERING FINALLY ------------------------------------------------------
weights <- c(2, 2,
1, 1, 1, 1, 1,
3,
1, 0.5, 2,
3, 0.5, 2,
2, 3, 2,
2, 2, 3, 3)
# Calculate similarity between each row in dataset1 and each row in dataset2
similarity_matrix <- matrix(NA, nrow = nrow(College_WR_Full), ncol = nrow(NFL_WR_Full))
for (i in 1:nrow(College_WR_Full)) {
for (j in 1:nrow(NFL_WR_Full)) {
similarity_matrix[i, j] <- calculate_similarity(College_WR_Full[i, ], NFL_WR_Full[j, ], weights, method = "euclidean")
}
}
# Find the row in dataset2 most similar to each row in dataset1
# Find the top 5 most similar rows in dataset2 for each row in dataset1
top5_indices <- apply(similarity_matrix, 1, function(x) order(x)[1:5])
top5_values <- apply(similarity_matrix, 1, function(x) sort(x)[1:5])
# Create a dataframe with player IDs from dataset1 and top 5 player IDs and their similarity values from dataset2
result_df <- data.frame(
player_id.x = rep(College_WR_Full$player_id, each = 5),
player_id.y = c(NFL_WR_Full$player_id[top5_indices]),
similarity = c(top5_values)
)
CollegeComps <- result_df %>%
# group_by(player_id.x) %>%
group_by() %>%
mutate(similarity_pr = 1-percent_rank(similarity))  %>%
left_join(College_Name_Join, by = c("player_id.x"= 'player_id')) %>%
left_join(NFL_Names_Join, by = c("player_id.y"= 'player_id')) %>%
select(player.x, player_id.x, player.y, player_id.y, similarity, similarity_pr) %>%
left_join(NFLWAR, by = c("player_id.y" = 'player_id')) %>%
# filter(similarity_pr >= 0.5) %>%
group_by(player_id.x) %>%
mutate(ExpectedWAR = similarity_pr * AvgWAR,
MeanExpectedWAR = mean(ExpectedWAR)) %>%
arrange(desc(similarity_pr)) %>%
arrange(desc(MeanExpectedWAR)) %>%
mutate(Comp = player.y,
ID = paste0(player.x, " - ", player_id.x),
Similarity = similarity_pr) %>%
group_by(ID) %>%
select(ID, player_id.x, Comp, Similarity, ExpectedWAR, MeanExpectedWAR) %>%
left_join(NFLWAR, by = c('player_id.x' = "player_id")) %>%
filter(
# AvgWAR >= 0.05,
# Similarity >= 0.5
) %>%
# slice_head(n = 1) %>%
mutate(MeanSimilarity = mean(Similarity),
AdjustedExpectedWAR = MeanSimilarity * MeanExpectedWAR,
Diff = AvgWAR - AdjustedExpectedWAR,
AvgDiff = mean(Diff, na.rm = T)) %>%
group_by() %>%
mutate(TotalDiff = sum(Diff, na.rm = T),
MeanDiff = mean(Diff, na.rm = T))
